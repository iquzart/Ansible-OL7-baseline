---
- name: Check File
  shell: ls -lh /tmp 
  register: result
  ignore_errors: yes
  tags: ['test1','t1']

- name: Define Variable
  set_fact:
     exists: "{{ result.stdout }}"
  when: result|success
  tags: ['test1','t1']

- name: Display Variable
  debug: msg= "{{ hostname }}"
  ignore_errors: yes
  tags: ['test1','t1']

- name: host type
  debug: msg='Application'
  when: var=result.stdout == true


#----------------------------------------------------------------------
#  Working  ##########################################
- name: Set the tier 
  set_fact:  
     tier: "{% if tierv == 'app' %}Application Node{% elif tierv == 'db' %}Database Node{% else %}Please set the Tier{% endif %}"

- name: Value Selected
  debug: var=tier

- name: Oracle Users | Creating Oracle users - Database Node
  user: name={{ item }} shell=/bin/bash groups=dba createhome=yes home=/home/{{ item }} password={{ oracle_os_user_pass }}
  with_items:
       - ora{{ env }}
       - appl{{ env }}
  when: tier == 'Database Node'


- name: Oracle Users | Creating Oracle users - Application Node
  user: name={{ item }} shell=/bin/bash groups=dba createhome=yes home=/home/{{ item }} password={{ oracle_os_user_pass }}
  with_items:
       - appl{{ env }}
  when: tier == 'Application Node'

#----------------------------------------------------------------
- name: Orcale Users | Updating limits.conf with {{ tier }} users
  shell: sed -i s/{{ item.1 }}/{{ item.2 }}/g  /etc/security/limits.d/oracle-ebs-server-R12-preinstall.conf
  with_items:
       -  { 1: "oracle", 2: "ora{{ env }}" }
       -  { 1: "applmgr", 2: "appl{{ env }}" }   
  when: tier == 'Database Node'


- name: Orcale Users | Updating limits.conf with {{ tier }} users
  shell: sed -i s/{{ item.1 }}/{{ item.2 }}/g  /etc/security/limits.d/oracle-ebs-server-R12-preinstall.conf
  with_items:
       -  { 1: "oracle", 2: "appl{{ env }}" }
  when: tier == 'Application Node'
#-----------------------------------------------------
# pasword prompt
#

#ad_password

#vars_prompt:
#    - name: "ad_password"
#      prompt: "Enter password for new account"
#      private: yes
#      tags: ['prmpt_pass']

- name: Password for #{{ realm_admin }
  user: name=userwithpassword password={{ad_password}}
  tags: ['prmpt_pass']


- name: DMZ Check
  debug: msg="Env is not DMZ"
#  when: env!='dmz'
  tags: [ 'dmzcheck' ]


- name: Oracle Users | Creating Oracle users - Application Node
  user: name={{ item }} shell=/bin/bash groups=dba createhome=yes home=/home/{{ item }} password={{ oracle_os_user_pass }}
  with_items:
       - passt{{ env }}
  tags: [ 'test_user'] 
